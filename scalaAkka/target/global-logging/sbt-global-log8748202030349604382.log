[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sofiv\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sofiv\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 11.0.19)
[debug]       Load.loadUnit: plugins took 185.6798ms
[debug]       Load.loadUnit: defsScala took 0.3948ms
[debug] [Loading] Scanning directory C:\Users\sofiv\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sofiv\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.8074 ms
[debug]           Load.resolveProject(global-plugins) took 71.5474ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sofiv\.sbt\1.0\plugins, plugins: List(<none>))) took 142.0004ms
[debug] [Loading] Done in C:\Users\sofiv\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 183.2661ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3651ms
[debug]     Load.loadUnit(file:/C:/Users/sofiv/.sbt/1.0/plugins/, ...) took 384.9765ms
[debug]   Load.apply: load took 760.387ms
[debug]   Load.apply: resolveProjects took 10.8364ms
[debug]   Load.apply: finalTransforms took 80.1858ms
[debug]   Load.apply: config.delegates took 10.2327ms
[debug]   Load.apply: Def.make(settings)... took 756.213ms
[debug]   Load.apply: structureIndex took 113.5855ms
[debug]   Load.apply: mkStreams took 2.1829ms
[info] loading global plugins from C:\Users\sofiv\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4645.8213ms
[debug]           Load.loadUnit: plugins took 36.3614ms
[debug]           Load.loadUnit: defsScala took 0.0074ms
[debug] [Loading] Scanning directory C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka\project
[debug]             Load.loadUnit: mkEval took 15.7943ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8959 ms
[info] loading settings for project scalaakka-build from idea.sbt ...
[debug]               Load.resolveProject(scalaakka-build) took 5.6443ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaakka-build, base: C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka\project, plugins: List(<none>))) took 9.4841ms
[debug] [Loading] Done in C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka\project, returning: (scalaakka-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3820.7777ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.0045ms
[debug]         Load.loadUnit(file:/C:/Users/sofiv/OneDrive/Documentos/manifiestoReactivo/scalaAkka/project/, ...) took 3867.1625ms
[debug]       Load.apply: load took 3870.0172ms
[debug]       Load.apply: resolveProjects took 0.2526ms
[debug]       Load.apply: finalTransforms took 14.1343ms
[debug]       Load.apply: config.delegates took 0.4608ms
[debug]       Load.apply: Def.make(settings)... took 566.094ms
[debug]       Load.apply: structureIndex took 63.8095ms
[debug]       Load.apply: mkStreams took 0.0045ms
[info] loading project definition from C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 14466.6578ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka
[debug]       Load.loadUnit: mkEval took 10.3283ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.7322 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 42.4646ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka, plugins: List(<none>))) took 48.7045ms
[debug] [Loading] Done in C:\Users\sofiv\OneDrive\Documentos\manifiestoReactivo\scalaAkka, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2726.2301ms
[debug]     Load.loadUnit: cleanEvalClasses took 30.8817ms
[debug]   Load.loadUnit(file:/C:/Users/sofiv/OneDrive/Documentos/manifiestoReactivo/scalaAkka/, ...) took 17224.8105ms
[debug] Load.apply: load took 17227.2505ms
[debug] Load.apply: resolveProjects took 0.195ms
[debug] Load.apply: finalTransforms took 50.8126ms
[debug] Load.apply: config.delegates took 0.5207ms
[debug] Load.apply: Def.make(settings)... took 140.3018ms
[debug] Load.apply: structureIndex took 27.3895ms
[debug] Load.apply: mkStreams took 0.0055ms
[info] set current project to scalaAkka (in build file:/C:/Users/sofiv/OneDrive/Documentos/manifiestoReactivo/scalaAkka/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59765 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59765, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaAkka (in build file:/C:/Users/sofiv/OneDrive/Documentos/manifiestoReactivo/scalaAkka/)
[debug] > Exec(idea-shell, None, None)
